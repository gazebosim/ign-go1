package igngo

import (
  "encoding/json"
  "net/http"
  "os"
  "regexp"
  "testing"
)

// Generic Router tests

// Just invokes an invalid route
func TestInvalidRoute(t *testing.T) {
  setup()

  uri := "/1.0/invalidroute/"
  myJWT := os.Getenv("IGN_FUEL_TEST_JWT")
  assertRouteMultipleArgs("GET", uri, nil, http.StatusNotFound, &myJWT, "text/plain; charset=utf-8", t)
}

// Test the autogenerated OPTIONS urls
func TestOptions(t *testing.T) {
  setup()

  for idx := range routes {
    uri := routes[idx].URI
    // Create a valid url. We look for routes containing {path:[a-zA-Z0-9=\\-\\_\\/\\.\\+]+},
    // and only keep the first part (ie. path)
    re := regexp.MustCompile("{([^/]+)?:.+?}")
    uri = re.ReplaceAllString(uri, "$1")
    body, ok := assertRoute("OPTIONS", uri, http.StatusOK, t)

    var parsed map[string]interface{}
    json.Unmarshal(*body, &parsed)

    if !ok {
      t.Fatalf("OPTIONS %s request failed", uri)
    }
    if parsed["name"] != routes[idx].Name {
      t.Fatalf("OPTIONS %s request returned invalid name. Exp: [%s], got: [%s]", uri, routes[idx].Name, parsed["name"])
    }
  }
}
