package igntest

import (
  "testing"
)

// Generic Router tests

// NOTE: these tests are not being run automatically from the dependant projects
// (eg. ign-fuelserver). And when run from ign-go they don't have access to
// internal/private variables like `routes`, and thus fail.
// I'm commenting this for now, to be able to enable tests in ign-go. Then, I will
// move these to specific projects (ign-fuelserver).

func TestOK(t *testing.T) {
}

// Just invokes an invalid route
// func TestInvalidRoute(t *testing.T) {
  // uri := "/1.0/invalidroute/"
  // myJWT := os.Getenv("IGN_TEST_JWT")
  // AssertRouteMultipleArgs("GET", uri, nil, http.StatusNotFound, &myJWT, "text/plain; charset=utf-8", t)
// }

// Test the autogenerated OPTIONS urls
// func TestOptions(t *testing.T) {

//   for idx := range routes {
//     uri := routes[idx].URI
//     // Create a valid url. We look for routes containing {path:[a-zA-Z0-9=\\-\\_\\/\\.\\+]+},
//     // and only keep the first part (ie. path)
//     re := regexp.MustCompile("{([^/]+)?:.+?}")
//     uri = re.ReplaceAllString(uri, "$1")
//     body, ok := assertRoute("OPTIONS", uri, http.StatusOK, t)

//     var parsed map[string]interface{}
//     json.Unmarshal(*body, &parsed)

//     if !ok {
//       t.Fatalf("OPTIONS %s request failed", uri)
//     }
//     if parsed["name"] != routes[idx].Name {
//       t.Fatalf("OPTIONS %s request returned invalid name. Exp: [%s], got: [%s]", uri, routes[idx].Name, parsed["name"])
//     }
//   }
// }
